apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.vatsaldesai92'
version = '1.0.1'

android {
    compileSdkVersion 33
    buildToolsVersion '34.0.0-rc4'

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 33

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'com.desai.vatsal.mydynamiccalendar'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_18
        targetCompatibility JavaVersion.VERSION_18
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.5.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.viewpager:viewpager:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    testImplementation 'junit:junit:4.13.2'

    implementation 'com.google.android.material:material:1.9.0'

}

// build a jar with source files
/*task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}*/

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    //classpath += configurations.compile
}

// build a jar with javadoc
/*task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}*/

/*artifacts {
    archives sourcesJar
    archives javadocJar
}*/
